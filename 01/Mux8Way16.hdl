// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Mux (a=a[0], b=e[0], sel=sel[2], out=s1);
    Mux (a=b[0], b=f[0], sel=sel[2], out=s2);
    Mux (a=c[0], b=g[0], sel=sel[2], out=s3);
    Mux (a=d[0], b=h[0], sel=sel[2], out=s4);
    Mux (a=s1, b=s3, sel=sel[1], out=s5);
    Mux (a=s2, b=s4, sel=sel[1], out=s6);
    Mux (a=s5, b=s6, sel=sel[0], out=out[0]);

    Mux (a=a[1], b=e[1], sel=sel[2], out=s11);
    Mux (a=b[1], b=f[1], sel=sel[2], out=s21);
    Mux (a=c[1], b=g[1], sel=sel[2], out=s31);
    Mux (a=d[1], b=h[1], sel=sel[2], out=s41);
    Mux (a=s11, b=s31, sel=sel[1], out=s51);
    Mux (a=s21, b=s41, sel=sel[1], out=s61);
    Mux (a=s51, b=s61, sel=sel[0], out=out[1]);

    Mux (a=a[2], b=e[2], sel=sel[2], out=s12);
    Mux (a=b[2], b=f[2], sel=sel[2], out=s22);
    Mux (a=c[2], b=g[2], sel=sel[2], out=s32);
    Mux (a=d[2], b=h[2], sel=sel[2], out=s42);
    Mux (a=s12, b=s32, sel=sel[1], out=s52);
    Mux (a=s22, b=s42, sel=sel[1], out=s62);
    Mux (a=s52, b=s62, sel=sel[0], out=out[2]);

    Mux (a=a[3], b=e[3], sel=sel[2], out=s13);
    Mux (a=b[3], b=f[3], sel=sel[2], out=s23);
    Mux (a=c[3], b=g[3], sel=sel[2], out=s33);
    Mux (a=d[3], b=h[3], sel=sel[2], out=s43);
    Mux (a=s13, b=s33, sel=sel[1], out=s53);
    Mux (a=s23, b=s43, sel=sel[1], out=s63);
    Mux (a=s53, b=s63, sel=sel[0], out=out[3]);

    Mux (a=a[4], b=e[4], sel=sel[2], out=s14);
    Mux (a=b[4], b=f[4], sel=sel[2], out=s24);
    Mux (a=c[4], b=g[4], sel=sel[2], out=s34);
    Mux (a=d[4], b=h[4], sel=sel[2], out=s44);
    Mux (a=s14, b=s34, sel=sel[1], out=s54);
    Mux (a=s24, b=s44, sel=sel[1], out=s64);
    Mux (a=s54, b=s64, sel=sel[0], out=out[4]);

    Mux (a=a[5], b=e[5], sel=sel[2], out=s15);
    Mux (a=b[5], b=f[5], sel=sel[2], out=s25);
    Mux (a=c[5], b=g[5], sel=sel[2], out=s35);
    Mux (a=d[5], b=h[5], sel=sel[2], out=s45);
    Mux (a=s15, b=s35, sel=sel[1], out=s55);
    Mux (a=s25, b=s45, sel=sel[1], out=s65);
    Mux (a=s55, b=s65, sel=sel[0], out=out[5]]);

    Mux (a=a[6], b=e[6], sel=sel[2], out=s16);
    Mux (a=b[6], b=f[6], sel=sel[2], out=s26);
    Mux (a=c[6], b=g[6], sel=sel[2], out=s36);
    Mux (a=d[6], b=h[6], sel=sel[2], out=s46);
    Mux (a=s16, b=s36, sel=sel[1], out=s56);
    Mux (a=s26, b=s46, sel=sel[1], out=s66);
    Mux (a=s56, b=s66, sel=sel[0], out=out[6]);

    Mux (a=a[7], b=e[7], sel=sel[2], out=s17);
    Mux (a=b[7], b=f[7], sel=sel[2], out=s27);
    Mux (a=c[7], b=g[7], sel=sel[2], out=s37);
    Mux (a=d[7], b=h[7], sel=sel[2], out=s47);
    Mux (a=s17, b=s37, sel=sel[1], out=s57);
    Mux (a=s27, b=s47, sel=sel[1], out=s67);
    Mux (a=s57, b=s67, sel=sel[0], out=out[7]);

    Mux (a=a[8], b=e[8], sel=sel[2], out=s18);
    Mux (a=b[8], b=f[8], sel=sel[2], out=s28);
    Mux (a=c[8], b=g[8], sel=sel[2], out=s38);
    Mux (a=d[8], b=h[8], sel=sel[2], out=s48);
    Mux (a=s18, b=s38, sel=sel[1], out=s58);
    Mux (a=s28, b=s48, sel=sel[1], out=s68);
    Mux (a=s58, b=s68, sel=sel[0], out=out[8]);

    Mux (a=a[9], b=e[9], sel=sel[2], out=s19);
    Mux (a=b[9], b=f[9], sel=sel[2], out=s29);
    Mux (a=c[9], b=g[9], sel=sel[2], out=s39);
    Mux (a=d[9], b=h[9], sel=sel[2], out=s49);
    Mux (a=s19, b=s39, sel=sel[1], out=s59);
    Mux (a=s29, b=s49, sel=sel[1], out=s69);
    Mux (a=s59, b=s69, sel=sel[0], out=out[9]);

    Mux (a=a[10], b=e[10], sel=sel[2], out=s100);
    Mux (a=b[10], b=f[10], sel=sel[2], out=s200);
    Mux (a=c[10], b=g[10], sel=sel[2], out=s300);
    Mux (a=d[10], b=h[10], sel=sel[2], out=s400);
    Mux (a=s100, b=s300, sel=sel[1], out=s500);
    Mux (a=s200, b=s400, sel=sel[1], out=s600);
    Mux (a=s500, b=s600, sel=sel[0], out=out[10]);

    Mux (a=a[11], b=e[11], sel=sel[2], out=s111);
    Mux (a=b[11], b=f[11], sel=sel[2], out=s211);
    Mux (a=c[11], b=g[11], sel=sel[2], out=s311);
    Mux (a=d[11], b=h[11], sel=sel[2], out=s411);
    Mux (a=s111, b=s311, sel=sel[1], out=s511);
    Mux (a=s211, b=s411, sel=sel[1], out=s611);
    Mux (a=s511, b=s611, sel=sel[0], out=out[11]);

    Mux (a=a[12], b=e[12], sel=sel[2], out=s112);
    Mux (a=b[12], b=f[12], sel=sel[2], out=s212);
    Mux (a=c[12], b=g[12], sel=sel[2], out=s312);
    Mux (a=d[12], b=h[12], sel=sel[2], out=s412);
    Mux (a=s112, b=s312, sel=sel[1], out=s512);
    Mux (a=s212, b=s412, sel=sel[1], out=s612);
    Mux (a=s512, b=s612, sel=sel[0], out=out[12]);

    Mux (a=a[13], b=e[13], sel=sel[2], out=s113);
    Mux (a=b[13], b=f[13], sel=sel[2], out=s213);
    Mux (a=c[13], b=g[13], sel=sel[2], out=s313);
    Mux (a=d[13], b=h[13], sel=sel[2], out=s413);
    Mux (a=s113, b=s313, sel=sel[1], out=s513);
    Mux (a=s213, b=s413, sel=sel[1], out=s613);
    Mux (a=s513, b=s613, sel=sel[0], out=out[13]);

    Mux (a=a[14], b=e[14], sel=sel[2], out=s114);
    Mux (a=b[14], b=f[14], sel=sel[2], out=s214);
    Mux (a=c[14], b=g[14], sel=sel[2], out=s314);
    Mux (a=d[14], b=h[14], sel=sel[2], out=s414);
    Mux (a=s114, b=s314, sel=sel[1], out=s514);
    Mux (a=s214, b=s414, sel=sel[1], out=s614);
    Mux (a=s514, b=s614, sel=sel[0], out=out[14]);

    Mux (a=a[15], b=e[15], sel=sel[2], out=s115);
    Mux (a=b[15], b=f[15], sel=sel[2], out=s215);
    Mux (a=c[15], b=g[15], sel=sel[2], out=s315);
    Mux (a=d[15], b=h[15], sel=sel[2], out=s415);
    Mux (a=s115, b=s315, sel=sel[1], out=s515);
    Mux (a=s215, b=s415, sel=sel[1], out=s615);
    Mux (a=s515, b=s615, sel=sel[0], out=out[15]);
}